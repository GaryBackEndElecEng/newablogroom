import { cssClassType, flexToAttInterfaceType, standardAttType, IDKeyValueType, typeToIdType, idEnumType, locationEnumType, attrEnumType, typeEnumType, eleEnumType } from "@/lib/attributeTypes";
import { colType, element_selType, elementType, rowType, selectorType } from "../editor/Types";

export const locationEnumArr: locationEnumType[] = ["headerflag", "shapeOutside", "design", "reference", "pasteCode", "customHeader", "normalHeader", "flexbox", "htmlElement", "footer", "dataset", "main", "sidebar", "ven"];

export const typeEnumArr: typeEnumType[] = ["headerflag", "shapeOutside", "design", "reference", "pasteCode", "ven"];

export const attrEnumArr = ["attr", "time", "imgDesc", "email", "tel", "backgroundImg", "link", "link2", "shapeOutsideCircle", "shapeOutsideSquare", "shapeOutsidePolygon", "isCode", "isPasteCode", "isArrow", "isVen", "isWave", "isArch", "isCircle", "isReference", "isArt", "isVen"]

export const imgKeyTest = (ele: elementType | element_selType | rowType | colType) => {
    const hasBlob: RegExp = /(blob:http)/;
    const null_: RegExp = /(null)/;
    const genericImgKey: RegExp = /(no_userid)/;
    if (ele.name === "img") {
        ele = ele as elementType | element_selType;
        const res = (ele.img && ele.imgKey && ele.img !== "undefined" && ele.imgKey !== "undefined" && !hasBlob.test(ele?.img) && !null_.test(ele?.imgKey) && !genericImgKey.test(ele?.imgKey));
        if (res === true) {
            return true
        }
    }
    return false

};

export const imgKeyTest2 = ({ imgKey, img }: { imgKey: string, img: string }) => {
    const hasBlob: RegExp = /(blob:http)/;
    const null_: RegExp = /(null)/;
    const genericImgKey: RegExp = /(no_userid)/;
    let hasImgKey: boolean = false;
    hasImgKey = (!hasBlob.test(img) && !null_.test(imgKey) && !genericImgKey.test(imgKey));

    return hasImgKey
}
export const attrEnumArrTest = (ele: elementType | element_selType | rowType | colType) => {
    if (!(ele.attr)) return;
    const hasImgKey = imgKeyTest(ele);
    const regDesc: RegExp = /\w+/;
    const reTime: RegExp = /^(?:(?:31(\/|-|\.)(?:0?[13578]|1[02]))\1|(?:(?:29|30)(\/|-|\.)(?:0?[13-9]|1[0-2])\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:29(\/|-|\.)0?2\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\d|2[0-8])(\/|-|\.)(?:(?:0?[1-9])|(?:1[0-2]))\4(?:(?:1[6-9]|[2-9]\d)?\d{2})$/
    return [
        { id: "shapeOutsideCircle", test: ele?.attr.includes("shapeOutsideCircle"), value: ele.attr as string },
        { id: "shapeOutsideSquare", test: ele?.attr.includes("shapeOutsideSquare"), value: ele.attr as string },
        { id: "shapeOutsidePolygon", test: ele?.attr.includes("shapeOutsidePolygon"), value: ele.attr as string },
        { id: "backgroundImg", test: ele?.attr.includes("backgroundImg") && ele.imgKey, value: ele.attr as string },
        { id: "backgroundImage", test: ele?.attr.includes("backgroundImage") && ele.imgKey, value: ele.attr as string },
        { id: "isVen", test: ele?.attr.includes("isVen"), value: ele.attr as string },
        { id: "isPasteCode", test: ele?.attr.includes("isPasteCode"), value: ele.attr as string },
        { id: "isArrow", test: ele?.attr.includes("isArrow"), value: ele.attr as string },
        { id: "isReference", test: ele?.attr.includes("isReference"), value: ele.attr as string },
        { id: "isCircle", test: ele?.attr.includes("isCircle"), value: ele.attr as string },
        { id: "isChart", test: ele?.attr.includes("isChart"), value: ele.attr as string },
        { id: "isArch", test: ele?.attr.includes("isArch"), value: ele.attr as string },
        { id: "isArrow", test: ele?.attr.includes("isArrow"), value: ele.attr as string },
        { id: "isPasteCode", test: ele?.attr.includes("isPasteCode"), value: ele.attr as string },
        { id: "isHeaderflag", test: ele?.attr.includes("isHeaderflag"), value: ele.attr as string },
        { id: "isArt", test: ele?.attr.includes("isArt"), value: ele.attr as string },
        { id: "isCircle", test: ele?.attr.includes("isCircle"), value: ele.attr as string },
        { id: "isWave", test: ele?.attr.includes("isWave"), value: ele.attr as string },
        { id: "isArrow", test: ele?.attr.includes("isArrow"), value: ele.attr as string },
        { id: "link", test: ele?.attr.includes("http"), value: ele.attr as string },
        { id: "email", test: ele?.attr.includes("mail"), value: ele.attr as string },
        { id: "tel", test: ele?.attr.includes("tel"), value: ele.attr as string },
        { id: "time", test: ele.attr && reTime.test(ele.attr), value: ele.attr as string },
        { id: "isCode", test: ele?.attr.includes("code"), value: ele.attr as string },
        { id: "imgDesc", test: (ele?.name === "img" && regDesc.test(ele?.attr)), value: ele.attr as string },
        { id: "imgKey", test: (ele.name === "img" && hasImgKey), value: ele.attr },
        { id: "addUrlImg", test: (ele.name === "p" || ele.name === "div") && ele?.attr.includes("addUrlImg"), value: ele.attr },

    ].find(cl => (cl.test === true)) as { id: attrEnumType, test: boolean, value: string } | undefined
};
export const generalEleTests = (ele: elementType | element_selType | rowType | colType | selectorType) => {
    const ele1 = ele as rowType | colType | elementType | element_selType;
    if (typeof ele !== "object") return;
    const eleTrue = ele as elementType | element_selType;
    const sel = ele as selectorType;
    const checkAttr = (ele as rowType | colType | elementType | element_selType).attr as string;
    const checkType = (ele as rowType | colType | elementType | element_selType).type as string;
    if (!(checkAttr || checkType)) return;
    return [

        { id: "link", isValue: checkAttr.includes("http"), value: eleTrue.attr },
        { id: "email", isValue: checkAttr.includes("mail"), value: eleTrue.attr },
        { id: "tel", isValue: (checkAttr.includes("tel")), value: eleTrue.attr },
        { id: "time", isValue: (eleTrue && eleTrue?.name === "time"), value: eleTrue.attr },
        { id: "design", isValue: (checkType.includes("design")), value: eleTrue.type },
        { id: "referenceLink", isValue: (checkType.includes("reference")), value: eleTrue.attr },
        { id: "isPasteCode", isValue: (checkAttr.includes("paste")), value: eleTrue.attr },
        { id: "isCode", isValue: (checkAttr.includes("code")), value: eleTrue.attr },
        { id: "isArrow", isValue: (checkAttr.includes("arrow") && eleTrue.imgKey), value: eleTrue.attr },
        { id: "isVen", isValue: (checkAttr.includes("ven")), value: eleTrue.attr },
        { id: "isArch", isValue: (checkAttr.includes("arch")), value: eleTrue.attr },
        { id: "card", isValue: (checkAttr.includes("card")), value: eleTrue.attr },
        { id: "fill", isValue: (checkAttr.includes("fill")), value: eleTrue.attr },
        { id: "backgroundImg", isValue: (checkAttr.includes("background") && ele1.imgKey), value: eleTrue.attr },
        { id: "addClass", isValue: (checkAttr.includes("addClass")), value: ele1.attr },
        { id: "imgDesc", isValue: (eleTrue.name === "img" && checkAttr.includes("imgDesc")), value: eleTrue.attr },
        { id: "headerflag", isValue: (checkType.includes("headerflag")), value: eleTrue.type },
        { id: "isHeader", isValue: ((sel as selectorType) && (sel as selectorType).headerType), value: sel.headerType },
        { id: "shapeOutside", isValue: (checkType.includes("shapeOutside") && eleTrue.imgKey), value: eleTrue.type },
        { id: "shapeOutsideCircle", isValue: (checkAttr.includes("shapeoutside-circle")), value: eleTrue.attr },
        { id: "shapeOutsideSquare", isValue: (checkAttr.includes("shapeoutside-square")), value: eleTrue.attr },
        { id: "shapeOutsidePolygon", isValue: (checkAttr.includes("shapeoutside-polygon")), value: eleTrue.attr },
        { id: "imgKey", isValue: ele1.imgKey, value: ele1.imgKey },
        { id: "isImage", isValue: eleTrue.name === "img" && eleTrue.imgKey, value: "true" },
        { id: "noImage", isValue: eleTrue.name === "img" && !eleTrue.imgKey, value: "true" },
        { id: "type", isValue: ele1.type && ele1.type !== "type", value: ele1.type },
        { id: "attr", isValue: ele1.attr, value: ele1.attr },
    ].filter(kat => (kat.isValue));
}
export const typeEnumArrTest = (ele: elementType | element_selType | rowType | colType) => {
    if (!(ele.type)) return;

    return [
        { id: "shapeOutside", test: ele.type.includes("shapeOutside"), value: ele.type as string },
        { id: "headerflag", test: ele.type.includes("headerflag"), value: ele.type as string },
        { id: "design", test: ele.type.includes("design"), value: ele.type as string },
        { id: "ven", test: ele.type.includes("ven"), value: ele.type as string },
        { id: "reference", test: ele.type.includes("reference"), value: ele.type as string },
        { id: "pasteCode", test: ele.type.includes("pasteCode"), value: ele.type as string },
        { id: "chart", test: ele.type.includes("chart"), value: ele.type as string },


    ].find(cl => (cl.test === true)) as { id: typeEnumType, test: boolean, value: string } | undefined
};



export const cssClassArr: cssClassType[] = [
    { headerType: undefined, level: "row", eleType: "div", id: "rowId", loc: "flexbox", type: "flexbox", className: " row mx-auto jusifiy-content-start flexbox-row", key: "main", css: "width:100%;min-height:10vh;position:relative;min-width:50vw;justify-content:flex-start;" },
    { headerType: undefined, level: "selector", eleType: "section", id: "selectorId", loc: "flexbox", type: "flexbox", className: "mx-2", key: "selector", css: "padding-inline:10px;position:relative;width:100%;" },

    { headerType: "custom", level: "selector", eleType: "header", id: "selectorId", loc: "flexbox", type: "customHeader", className: "mx-auto w-100 mainHeader flexCol text-center position-relative mb-5 ", key: undefined, css: "margin-block:0px;padding-inline:5px;justify-content:center;width:100%;min-height:15vh;" },
    { headerType: "custom", level: "row", eleType: "div", id: "rowId", loc: "flexbox", type: "customHeader", className: "row w-100 box-shadow-md1 mx-auto ", key: undefined, css: "position:relative;padding:5px;width:100%;height:100%;min-height:15vh;" },
    { headerType: "custom", level: "col", eleType: "div", id: "colId", loc: "flexbox", type: "customHeader", className: " column mx-auto  ", key: undefined, css: "position:relative;height:100%;min-height:inherit;display:flex;flex-direction:column;" },
    { headerType: "custom", level: "element", eleType: "div", id: "divContId", loc: "flexbox", type: "customHeader", className: "eleContainer divCont ", key: undefined, css: "margin-inline:0px;padding-inline:2px;position:relative;" },
    { headerType: "custom", level: "col", eleType: "div", id: "colId", loc: "flexbox", type: undefined, className: "mx-auto box-shadow column column-header ", key: undefined, css: "margin-block:auto;padding-inline:5px;justify-content:center;min-height:15vh;display:flex;flex-direction:column;align-items:center;position:relative;z-index:0;" },
    { headerType: "custom", level: "element", eleType: "img", id: "linkImgs", loc: "flexbox", type: "customHeader", className: "", key: "links", css: "width:26px;border-radius:50%;filter:drop-shadow(0 0 0.5rem black);border:none;" },
    { headerType: "normal", level: "element", eleType: "img", id: "linkImgs", loc: "flexbox", type: "header", className: "", key: "links", css: "width:26px;border-radius:50%;filter:drop-shadow(0 0 0.5rem black);border:none;" },
    { headerType: "custom", level: "element", eleType: "img", id: "elementId", loc: "flexbox", type: "customHeader", className: "", key: "links", css: "width:100%;max-width:800px;border-radius:7px;filter:drop-shadow(0 0 0.5rem black);border:none;" },
    { headerType: "custom", level: "row", eleType: "div", id: "rowId", loc: "flexbox", type: undefined, className: "row w-100 box-shadow-md1", key: undefined, css: "min-height:20vh;position:relative;padding:0px;width:100%;z-index:0;" },
    { headerType: "custom", level: "element", eleType: "p", id: "elementId", loc: "flexbox", type: undefined, className: "mx-auto ", key: undefined, css: "padding-inline:1.25rem;border-radius:8px;flex-wrap:pretty" },
    { headerType: "custom", level: "element", eleType: "img", id: "elementId", loc: "flexbox", type: undefined, className: "mx-auto image", key: undefined, css: "max-width:170px;aspect-ratio:1 / 1;position:relative;top:0px;left:0px;transform:translate(16px,16px);margin-inline:15px;margin-block:15px;" },
    { headerType: "custom", level: "element", eleType: "div", id: "divContId", loc: "flexbox", type: undefined, className: "eleContainer mx-auto w-100", key: undefined, css: undefined },
    { headerType: undefined, level: "element", eleType: "div", id: "divContId", loc: "htmlElement", type: "design", className: "eleContainer mx-auto w-100", key: undefined, css: "margin:0px;padding:1rem;position:relative;display:flex;flex-direction:column;align-items:center;justify-content:center;padding-inline:1.25rem;margin-inline:auto;border-radius:8px;width:100%;" },
    { headerType: undefined, level: "element", eleType: "div", id: "divContId", loc: "flexbox", type: "footer", className: "eleContainer mx-auto w-100", key: undefined, css: "margin:0px;padding:1rem;position:relative;display:flex;flex-direction:column;align-items:center;justify-content:center;" },
    { headerType: undefined, level: "element", eleType: "div", id: "divContId", loc: "flexbox", type: "reference", className: "eleContainer mx-auto w-100 ", key: undefined, css: "margin:0px;padding:1rem;" },
    { headerType: undefined, level: "element", eleType: "div", id: "divContId", loc: "htmlElement", type: "reference", className: "eleContainer mx-auto w-100 eleContainer", key: undefined, css: "margin:0px;padding:1rem;" },
    { headerType: undefined, level: "element", eleType: "div", id: "clean", loc: "htmlElement", type: "reference", className: "eleContainer mx-auto w-100 ", key: undefined, css: "margin:0px;padding:1rem;" },
    { headerType: undefined, level: "element", eleType: "div", id: "isArch", loc: "htmlElement", type: "design", className: "eleContainer arch mx-auto w-100", key: undefined, css: " padding:1rem;width:100%;" },
    { headerType: undefined, level: "element", eleType: "div", id: "isVen", loc: "htmlElement", type: "ven", className: "eleContainer arch mx-auto w-100", key: undefined, css: " padding:1rem;width:100%;" },
    { headerType: undefined, level: "element", eleType: "div", id: "divContId", loc: "htmlElement", type: "htmlElement", className: "eleContainer arch mx-auto", key: undefined, css: "padding:0.25rem;position:relative;width:90%;border-radius:8px;border:none;display:flex;flex-direction:column;align-items:center;margin-inline:auto;" },
    { headerType: undefined, level: "element", eleType: "p", id: "para", loc: "htmlElement", type: "htmlElement", className: "para  mx-auto w-100", key: undefined, css: "margin-block:2rem;padding:0.25rem;position:relative;width:100%;display:flex;flex-direction:column;align-items:center;border-radius:8px;border:none;" },
    { headerType: undefined, level: "element", eleType: "div", id: "divContId", loc: "flexbox", type: "flexbox", className: "eleContainer arch mx-auto", key: undefined, css: "margin-block:auto;padding:0.25rem;position:relative;display:flex;flex-direction:column;align-items:center;border-radius:8px;border-radius:8px;border:none;width:100%;" },
    { headerType: undefined, level: "element", eleType: "p", id: "para", loc: "flexbox", type: "flexbox", className: "para mx-auto w-100", key: undefined, css: "margin-block:auto;padding:0.25rem;position:relative;display:flex;flex-direction:column;align-items:center;border-radius:8px;border-radius:8px;border:none;" },
    { headerType: undefined, level: "element", eleType: "div", id: "divContId", loc: "htmlElement", type: "headerflag", className: "eleContainer arch mx-auto w-100", key: undefined, css: "margin-block:auto;padding:0.25rem;position:relative;width:100%;display:flex;flex-direction:column;align-items:center;justify-content:center;border-radius:8px;border:none;" },
    { headerType: undefined, level: "element", eleType: "div", id: "divContId", loc: "htmlElement", type: "pasteCode", className: "eleContainer mx-auto w-100", key: undefined, css: "margin-inline:auto;display:flex;flex-wrap:wrap;flex-direction:column;justify-content:center;align-items:center;gap:0rem;width:100%;max-width:1000px;border-radius:8px;border:none;" },
    { headerType: undefined, level: "element", eleType: "div", id: "divContId", loc: "flexbox", type: "shapeOutside", className: "eleContainer mx-auto w-100", key: undefined, css: "display:flex;align-items:center;justify-content:center;flex-direction:column;padding:0.5rem;border-radius:12px;margin-inline:3rem;padding-inline:1rem;border-radius:8px;border:none;" },
    { headerType: undefined, level: "element", eleType: "div", id: "divContId", loc: "htmlElement", type: "shapeOutside", className: "eleContainer mx-auto w-100", key: undefined, css: "display:flex;align-items:center;justify-content:center;flex-direction:column;padding:0.5rem;border-radius:12px;margin-inline:3rem;padding-inline:1rem;border-radius:8px;border:none;" },

];


export const IDKeys: { id: idEnumType, key: string | undefined }[] = [
    { key: "data-type", id: "type" },
    { key: undefined, id: "bgColor" },
    { key: undefined, id: "cssStyle" },
    { key: undefined, id: "height" },
    { key: undefined, id: "img" },
    { key: undefined, id: "text" },
    { key: "data-ref-link", id: "reflink" },
    { key: "data-add-url-img", id: "addUrlImg" },
    { key: "contenteditable", id: "editableTrue" },
    { key: "data-contenteditable", id: "editableTrue" },
    { key: "data-is-art", id: "isArt" },
    { key: "data-paste-code", id: "pasteCode" },
    { key: "data-reference", id: "reference" },
    { key: "data-is-reference", id: "isReference" },
    { key: "data-name", id: "name" },
    { key: "data-sel-row-col", id: "selRowCol" },
    { key: "data-sel-row", id: "selRow" },
    { key: "data-parent-id", id: "parentId" },
    { key: "data-element", id: "element" },
    { key: "aria", id: "aria" },
    { key: "data-id", id: "ID" },
    { key: "data-column", id: "column" },
    { key: "data-row", id: "row" },
    { key: "data-row-num", id: "rowNum" },
    { key: "data-row", id: "row" },
    { key: "data-num-cols", id: "numCols" },
    { key: "data-num-elements", id: "numEles" },
    { key: "data-id-row-col", id: "IDRowCol" },
    { key: "data-id-col", id: "IDCol" },
    { key: "data-is-placement", id: "placement" },
    { key: "data-link", id: "link" },
    { key: "data-email", id: "email" },
    { key: "data-tel", id: "tel" },
    { key: "data-time", id: "time" },
    { key: "data-img-key", id: "imgKey" },
    { key: "data-bg-img-key", id: "imgBgKey" },
    { key: "data-blog-id", id: "blogId" },
    { key: "data-linear-grad", id: "linearGrad" },
    { key: "data-is-image", id: "isImage" },
    { key: "data-no-image", id: "noImage" },
    { key: "is-editable", id: "isEdit" },
    { key: "data-flex", id: "flex" },
    { key: "data-no-flex", id: "noFlex" },
    { key: "data-attr", id: "attr" },
    { key: "data-backgroundImg", id: "backgroundImg" },
    { key: "data-backgroundImage", id: "backgroundImage" },
    { key: "data-shapeoutside", id: "shapeOutside" },
    { key: "data-shapeoutside-circle", id: "shapeOutsideCircle" },
    { key: "data-shapeoutside-square", id: "shapeOutsideSquare" },
    { key: "data-shapeoutside-polygon", id: "shapeOutsidePolygon" },
    { key: "data-headerflag", id: "headerflag" },
    { key: "data-is-headerflag", id: "isHeaderflag" },
    { key: "data-is-code", id: "isCode" },
    { key: "data-is-arrow", id: "isArrow" },
    { key: "data-is-ven", id: "isVen" },
    { key: "data-vendiagram", id: "ven" },
    { key: "data-type-chart", id: "chart" },
    { key: "data-is-chart", id: "isChart" },
    { key: "data-is-wave", id: "isWave" },
    { key: "data-is-arch", id: "isArch" },
    { key: "data-btn", id: "btn" },
    { key: "data-msg", id: "msg" },
    { key: "data-delete", id: "delete" },
    { key: "data-link-2", id: "link2" },
    { key: "data-card", id: "card" },
    { key: "data-card-2", id: "card2" },
    { key: "data-fill", id: "fill" },
    { key: "data-graph", id: "graph" },
    { key: "data-for-type", id: "forType" },
    { key: "data-img-desc", id: "imgDesc" },
    { key: "data-element-id", id: "elementId" },
    { key: "data-ordered", id: "ordered" },
    { key: "data-div-cont-id", id: "divContId" },
    { key: "data-parent_id", id: "parent_id" },
    { key: "data-ele-type", id: "eleType" },
    { key: "data-ele_id", id: "ele_id" },
    { key: "data-selector-id", id: "selectorId" },
    { key: "data-is-header", id: "isHeader" },
    { key: "data-is-is-footer", id: "isFooter" },
    { key: "data-row-id", id: "rowId" },
    { key: "data-row_id", id: "row_id" },
    { key: "data-col_id", id: "col_id" },
    { key: "data-", id: "selector_id" },
    { key: "data-col-id", id: "colId" },
    { key: "data-ele-placement", id: "elePlacement" },
    { key: "data-row-order", id: "rowOrder" },
    { key: "data-col-order", id: "colOrder" },
    { key: "data-ele-order", id: "eleOrder" },
    { key: "data-d-flex", id: "dFlex" },
    { key: "data-design", id: "design" },
    { key: "data-is-row", id: "isRow" },
    { key: "data-is-column", id: "isColumn" },
    { key: "data-is-element", id: "isElement" },
    { key: "data-reference-link", id: "referenceLink" },
    { key: "data-is-paste-code", id: "isPasteCode" },
    { key: "data-is-code-element", id: "isCodeElement" },
    { key: "data-is-circle", id: "isCircle" },
    { key: "data-reference", id: "reference" },
    { key: "data-add-class", id: "addClass" },
    { key: "data-name", id: "name" },
    { key: "data-row-type", id: "rowType" },
    { key: "data-col-type", id: "colType" },
    { key: "data-ele-type", id: "eleType" }

]


export const standardNodeIDs = [{ node: "img", ids: "type" }]

export const nodes: eleEnumType[] = ["p", "h1", "h2", "h3", "h4", "h5", "h6", "img", "a", "blockquote", "ul", "ol", "li", "pre", "div", "section", "small"];
export const pureNodes = nodes.filter(n => (n !== "a")).filter(n => (n !== "div"))
export const IDKeyValuepairs: IDKeyValueType[] = [
    { eleProperty: "generic", level: "element", nodes: nodes, type: "generic", class_: undefined, id: "type", key: "data-type", value: undefined },
    { eleProperty: "imgKey", level: "element", nodes: ["div", "p", "img"], type: "upload", class_: undefined, id: "imgKey", key: "data-img-key", value: undefined },
    { eleProperty: "generic", level: "element", nodes: nodes, type: "generic", class_: undefined, id: "divContId", key: "data-div-cont-id", value: undefined },
    { eleProperty: "type", level: "element", nodes: nodes, type: "generic", class_: undefined, id: "eleType", key: "data-element-type", value: undefined },
    { eleProperty: "type", level: "col", nodes: nodes, type: "generic", class_: undefined, id: "colType", key: "data-column-type", value: undefined },
    { eleProperty: "type", level: "row", nodes: nodes, type: "generic", class_: undefined, id: "rowType", key: "data-row-type", value: undefined },
    { eleProperty: "type", level: "element", nodes: ["div"], type: "generic", class_: undefined, id: "reference", key: "data-reference", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["div", "p"], type: "generic", class_: undefined, id: "addUrlImg", key: "data-add-url-img", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["div"], type: "generic", class_: undefined, id: "isReference", key: "data-is-reference", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["a"], type: "links", class_: undefined, id: "reflink", key: "data-reference-link", value: undefined },
    { eleProperty: "generic", level: "element", nodes: nodes, type: "generic", class_: undefined, id: "selRowCol", key: "data-sel-row-col", value: undefined },
    { eleProperty: "generic", level: "col", nodes: nodes, type: "generic", class_: undefined, id: "selRowCol", key: "data-sel-row-col", value: undefined },
    { eleProperty: "generic", level: "row", nodes: nodes, type: "generic", class_: undefined, id: "selRow", key: "data-sel-row", value: undefined },
    { eleProperty: "generic", level: "col", nodes: nodes, type: "generic", class_: undefined, id: "selRow", key: "data-sel-row", value: undefined },
    { eleProperty: "generic", level: "element", nodes: nodes, type: "generic", class_: undefined, id: "element", key: "is-element", value: "true" },
    { eleProperty: "generic", level: "element", nodes: nodes, type: "generic", class_: undefined, id: "aria", key: "aria-selected", value: "true" },
    { eleProperty: "generic", level: "element", nodes: nodes, type: "generic", class_: undefined, id: "ele_id", key: "data-ele_id", value: undefined },
    { eleProperty: "generic", level: "element", nodes: nodes, type: "generic", class_: undefined, id: "ID", key: "data-ID", value: undefined },
    { eleProperty: "generic", level: "col", nodes: ["div"], type: "generic", class_: undefined, id: "isColumn", key: "data-is-column", value: "true" },
    { eleProperty: "generic", level: "col", nodes: ["div"], type: "generic", class_: undefined, id: "column", key: "data-is-column", value: "true" },
    { eleProperty: "generic", level: "element", nodes: nodes.filter(nd => (nd !== "section")), type: "flex", class_: undefined, id: "dFlex", key: "data-flex", value: undefined },
    { eleProperty: "generic", level: "element", nodes: nodes.filter(nd => (nd !== "section")), type: "flex", class_: undefined, id: "flex", key: "flex", value: undefined },
    { eleProperty: "generic", level: "element", nodes: nodes.filter(nd => (nd !== "section")), type: "generic", class_: undefined, id: "elementId", key: "data-element-id", value: undefined },
    { eleProperty: "generic", level: "element", nodes: nodes, type: "generic", class_: undefined, id: "isElement", key: "data-is-element", value: "true" },
    { eleProperty: "generic", level: "element", nodes: nodes, type: "generic", class_: undefined, id: "parent_id", key: "data-parent-id", value: undefined },
    { eleProperty: "generic", level: "row", nodes: nodes, type: "generic", class_: undefined, id: "parent_id", key: "data-parent-id", value: undefined },
    { eleProperty: "generic", level: "row", nodes: ["div"], type: "generic", class_: undefined, id: "row", key: "data-is-row", value: "true" },
    { eleProperty: "generic", level: "row", nodes: ["div"], type: "generic", class_: undefined, id: "row_id", key: "data-row-id", value: undefined },
    { eleProperty: "generic", level: "row", nodes: ["div"], type: "generic", class_: undefined, id: "imgKey", key: "data-img-key", value: undefined },
    { eleProperty: "generic", level: "col", nodes: ["div"], type: "generic", class_: undefined, id: "col_id", key: "data-col-id", value: undefined },
    { eleProperty: "generic", level: "col", nodes: ["div"], type: "generic", class_: undefined, id: "imgKey", key: "data-img-key", value: undefined },
    { eleProperty: "generic", level: "col", nodes: ["div"], type: "generic", class_: undefined, id: "selRow", key: "data-sel-row", value: undefined },
    { eleProperty: "generic", level: "row", nodes: ["div"], type: "generic", class_: undefined, id: "isRow", key: "is-row", value: "true" },
    { eleProperty: "generic", level: "element", nodes: nodes, type: "order", class_: undefined, id: "eleOrder", key: "data-order", value: undefined },
    { eleProperty: "generic", level: "element", nodes: nodes, type: "placement", class_: undefined, id: "elePlacement", key: "data-is-placement", value: undefined },
    { eleProperty: "generic", level: "col", nodes: nodes, type: "order", class_: undefined, id: "colOrder", key: "data-order", value: undefined },
    { eleProperty: "generic", level: "row", nodes: nodes, type: "order", class_: undefined, id: "rowOrder", key: "data-order", value: undefined },
    { eleProperty: "generic", level: "element", nodes: ["div"], type: "generic", class_: undefined, id: "colId", key: "data-col-id", value: undefined },
    { eleProperty: "generic", level: "col", nodes: ["div"], type: "generic", class_: undefined, id: "colId", key: "data-col-id", value: undefined },
    { eleProperty: "generic", level: "row", nodes: ["div"], type: "generic", class_: undefined, id: "selectorId", key: "data-selector-id", value: undefined },
    { eleProperty: "generic", level: "selector", nodes: ["div", "footer", "header", "section"], type: "generic", class_: undefined, id: "selectorId", key: "data-selector-id", value: undefined },
    { eleProperty: "generic", level: "row", nodes: ["div"], type: "generic", class_: undefined, id: "placement", key: "data-selector-placement", value: undefined },
    { eleProperty: "generic", level: "selector", nodes: ["div", "footer", "header", "section"], type: "generic", class_: undefined, id: "placement", key: "data-selector-placement", value: undefined },
    { eleProperty: "generic", level: "row", nodes: ["div"], type: "generic", class_: undefined, id: "rowNum", key: "data-row-num", value: undefined },
    { eleProperty: "generic", level: "selector", nodes: ["div", "header", "section", "footer"], type: "generic", class_: undefined, id: "rowNum", key: "data-row-num", value: undefined },
    { eleProperty: "generic", level: "row", nodes: ["div"], type: "generic", class_: undefined, id: "rowId", key: "data-row-id", value: undefined },
    { eleProperty: "generic", level: "row", nodes: ["div"], type: "generic", class_: undefined, id: "numCols", key: "data-num-cols", value: undefined },
    { eleProperty: "generic", level: "selector", nodes: ["div", "footer", "header", "section"], type: "generic", class_: undefined, id: "numCols", key: "data-num-cols", value: undefined },
    { eleProperty: "generic", level: "element", nodes: nodes, type: "generic", class_: undefined, id: "numEles", key: "data-num-eles", value: undefined },
    { eleProperty: "generic", level: "element", nodes: ["small", "img"], type: "generic", class_: undefined, id: "imgDesc", key: "data-img-desc", value: undefined },
    { eleProperty: "generic", level: "element", nodes: ["ul"], type: "generic", class_: undefined, id: "ordered", key: "data-ordered-type", value: undefined },
    { eleProperty: "generic", level: "row", nodes: ["div"], type: "generic", class_: undefined, id: "IDRowCol", key: "data-ID-row-col", value: undefined },
    { eleProperty: "generic", level: "col", nodes: ["div"], type: "generic", class_: undefined, id: "IDCol", key: "data-ID-col", value: undefined },
    { eleProperty: "generic", level: "element", nodes: nodes, type: "generic", class_: undefined, id: "IDCol", key: "data-ID-col", value: undefined },
    { eleProperty: "generic", level: "selector", nodes: ["div", "footer", "header", "section"], type: "generic", class_: undefined, id: "selector_id", key: "data-selector_id", value: undefined },
    { eleProperty: "generic", level: "row", nodes: ["div"], type: "generic", class_: undefined, id: "selector_id", key: "data-selector_id", value: undefined },
    { eleProperty: "imgKey", level: "row", nodes: ["div"], type: "upload", class_: undefined, id: "imgKey", key: "data-img-key", value: undefined },
    { eleProperty: "generic", level: "element", nodes: nodes, type: "generic", class_: undefined, id: "name", key: "data-name", value: undefined },
    { eleProperty: "generic", level: "element", nodes: nodes, type: "generic", class_: undefined, id: "editableTrue", key: "contenteditable", value: "true" },
    { eleProperty: "generic", level: "col", nodes: ["div"], type: "generic", class_: undefined, id: "editableFalse", key: "contenteditable", value: "false" },
    { eleProperty: "generic", level: "row", nodes: ["div"], type: "generic", class_: undefined, id: "editableFalse", key: "contenteditable", value: "false" },
    { eleProperty: "generic", level: "selector", nodes: ["div", "footer", "header", "section"], type: "generic", class_: undefined, id: "editableFalse", key: "contenteditable", value: "false" },
    { eleProperty: "imgKey", level: "col", nodes: ["div"], type: "upload", class_: undefined, id: "imgKey", key: "data-img-key", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["a"], type: "links", class_: "showLink", id: "link", key: "data-link", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["canvas"], type: "charts", class_: "showChart", id: "isChart", key: "data-is-chart", value: undefined },
    { eleProperty: "type", level: "element", nodes: ["canvas"], type: "charts", class_: "showChart", id: "chart", key: "data-type-chart", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["a"], type: "reference", class_: undefined, id: "referenceLink", key: "data-reference-link", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["div"], type: "reference", class_: undefined, id: "isReference", key: "data-is-reference", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["a"], type: "links", class_: "showEmail", id: "email", key: "data-email", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["a"], type: "links", class_: "showTel", id: "tel", key: "data-tel", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["time"], type: "info", class_: "showTime", id: "time", key: "data-time", value: undefined },
    { eleProperty: "attr", level: "element", nodes: nodes, type: "generic", class_: undefined, id: "attr", key: "data-attr", value: undefined },
    { eleProperty: "attr", level: "element", nodes: nodes, type: "attr", class_: undefined, id: "attr", key: "data-attr", value: undefined },
    { eleProperty: "attr", level: "col", nodes: ["div"], type: "attr", class_: undefined, id: "attr", key: "data-attr", value: undefined },
    { eleProperty: "attr", level: "col", nodes: ["div"], type: "generic", class_: undefined, id: "attr", key: "data-attr", value: undefined },
    { eleProperty: "attr", level: "col", nodes: ["div"], type: "attr", class_: undefined, id: "backgroundImg", key: "data-backgroundImage", value: undefined },
    { eleProperty: "attr", level: "row", nodes: ["div"], type: "generic", class_: undefined, id: "attr", key: "data-attr", value: undefined },
    { eleProperty: "attr", level: "row", nodes: ["div"], type: "attr", class_: undefined, id: "attr", key: "data-attr", value: undefined },
    { eleProperty: "attr", level: "row", nodes: ["div"], type: "attr", class_: undefined, id: "backgroundImg", key: "data-backgroundImage", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["p"], type: "shapeOutside", class_: "showCircle", id: "shapeOutsideCircle", key: "data-shapeoutside-circle", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["p"], type: "shapeOutside", class_: "showSquare", id: "shapeOutsideSquare", key: "data-shapeoutside-square", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["p"], type: "shapeOutside", class_: "showPolygon", id: "shapeOutsidePolygon", key: "data-shapeoutside-polygon", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["div"], type: "headerflag", class_: "showHeader", id: "isHeaderflag", key: "data-headerflag", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["div"], type: "code", class_: "", id: "isCode", key: "data-is-code-element", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["div"], type: "code", class_: "", id: "isPasteCode", key: "data-is-paste-code-element", value: undefined },
    { eleProperty: "type", level: "element", nodes: ["div"], type: "code", class_: "", id: "pasteCode", key: "data-paste-code", value: undefined },
    { eleProperty: "type", level: "element", nodes: ["div"], type: "reference", class_: "", id: "reference", key: "data-reference", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["div"], type: "code", class_: "", id: "isCodeElement", key: "data-is-code-element", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["div", "p"], type: "design", class_: "showArrow", id: "isArrow", key: "data-arrow-design", value: undefined },
    { eleProperty: "type", level: "element", nodes: nodes, type: "design", class_: "background-bgShade", id: "design", key: "data-design", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["div"], type: "design", class_: "showVen", id: "isVen", key: "data-is-vendiagram", value: undefined },
    { eleProperty: "type", level: "element", nodes: ["div"], type: "design", class_: "showVen", id: "ven", key: "data-vendiagram", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["div", "p"], type: "design", class_: "showVen", id: "isArt", key: "data-is-art", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["div", "p"], type: "design", class_: "showWave", id: "isWave", key: "data-is-wave", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["div", "p"], type: "design", class_: "showArch", id: "isArch", key: "data-is-arch", value: undefined },
    { eleProperty: "attr", level: "element", nodes: ["div"], type: "design", class_: "showCircle", id: "isCircle", key: "data-circle-design", value: undefined },
    { eleProperty: "attr", level: undefined, nodes: ["button"], type: "custom", class_: "", id: "btn", key: "data-btn", value: undefined },
    { eleProperty: "attr", level: undefined, nodes: ["div"], type: "custom", class_: "showMsg", id: "msg", key: "data-msg", value: undefined },
    { eleProperty: "attr", level: undefined, nodes: ["div"], type: "custom", class_: "showDelete", id: "delete", key: "data-delete", value: undefined },
    { eleProperty: "attr", level: undefined, nodes: ["div"], type: "custom", class_: "showLink2", id: "link2", key: "data-link2", value: undefined },
    { eleProperty: "attr", level: undefined, nodes: ["div"], type: "custom", class_: "showCard", id: "card", key: "data-card", value: undefined },
    { eleProperty: "attr", level: undefined, nodes: ["div"], type: "custom", class_: "showCard2", id: "card2", key: "data-card2", value: undefined },
    { eleProperty: "class", level: undefined, nodes: ["div"], type: "custom", class_: undefined, id: "addClass", key: "data-add-class", value: undefined },
    { eleProperty: "attr", level: undefined, nodes: ["div"], type: "custom", class_: "showFill", id: "fill", key: "data-fill", value: undefined },
    { eleProperty: "attr", level: undefined, nodes: ["div"], type: "custom", class_: "showGraph", id: "graph", key: "data-graph", value: undefined },
    { eleProperty: "type", level: "element", nodes: nodes, type: "generic", class_: undefined, id: "forType", key: "data-for-type", value: undefined },
    { eleProperty: "type", level: "element", nodes: ["p"], type: "shapeOutside", class_: "shapeOutside", id: "shapeOutside", key: "data-shapeOutside", value: undefined },
    { eleProperty: "type", level: "element", nodes: ["div"], type: "headerflag", class_: "showHeader", id: "headerflag", key: "data-headerflag", value: undefined },
    { eleProperty: "type", level: "element", nodes: ["div"], type: "code", class_: "", id: "isPasteCode", key: "data-is-paste-code-element", value: undefined },
    { eleProperty: "imgKey", level: "element", nodes: ["img", "p", "div"], type: "generic", class_: undefined, id: "imgKey", key: "data-img-key", value: undefined },
    { eleProperty: "imgKey", level: "blog", nodes: ["section", "article", "div"], type: "generic", class_: undefined, id: "imgKey", key: "data-img-key", value: undefined },
    { eleProperty: "generic", level: "blog", nodes: ["section", "article", "div"], type: "generic", class_: undefined, id: "blogId", key: "data-blog-id", value: undefined },
    { eleProperty: "generic", level: "blog", nodes: ["section", "article", "div"], type: "generic", class_: undefined, id: "linearGrad", key: "data-linear-grad", value: undefined },
    { eleProperty: "imgBgKey", level: "blog", nodes: ["section", "article", "div"], type: "generic", class_: undefined, id: "imgBgKey", key: "data-bg-img-key", value: undefined },
    { eleProperty: "flex", level: "col", nodes: ["div"], type: "flex", class_: undefined, id: "flex", key: "flex", value: undefined },
    { eleProperty: "flex", level: "col", nodes: ["div"], type: "flex", class_: undefined, id: "dFlex", key: "data-flex", value: undefined },
    { eleProperty: "flex", level: "row", nodes: ["div"], type: "flex", class_: undefined, id: "flex", key: "flex", value: undefined },
    { eleProperty: "flex", level: "row", nodes: ["div"], type: "flex", class_: undefined, id: "dFlex", key: "data-flex", value: undefined },
    { eleProperty: "flex", level: "element", nodes: nodes.filter(nd => (nd !== "section")), type: "flex", class_: undefined, id: "flex", key: "flex", value: undefined },
]
//FLEXTYPE TO ATTTYPE INTERFACE
export const typeToId: typeToIdType[] = [
    { type: "generic", id: undefined },
    { type: "custom", id: "graph" },
    { type: "custom", id: "fill" },
    { type: "custom", id: "card2" },
    { type: "custom", id: "card" },
    { type: "custom", id: "showLink2" },
    { type: "custom", id: "showDelete" },
    { type: "custom", id: "showMsg" },
    { type: "custom", id: "btn" },
    { type: "design", id: "isCircle" },
    { type: "design", id: "isArch" },
    { type: "design", id: "isWave" },
    { type: "design", id: "isVen" },
    { type: "design", id: "isArrow" },
    { type: "headerflag", id: "headerflag" },
    { type: "shapePolygon", id: "polygon" },
    { type: "shapeCircle", id: "circle" },
    { type: "shapeSquare", id: "square" },
    { type: "shapeOutside", id: "shapeOutside" },
    { type: "order", id: "order" },
    { type: "flex", id: "flex" },
    { type: "links", id: "link" },
    { type: "links", id: "email" },
    { type: "links", id: "tel" },
    { type: "upload", id: "time" },
]
export const flexCoretoAtt: flexToAttInterfaceType[] = [
    { flex: true, key: "order", value: undefined, level: undefined, attType: "order" },
    { flex: true, key: "colId", value: undefined, level: "col", attType: "eleId" },
    { flex: true, key: "rowId", value: undefined, level: "col", attType: "rowEleId" },
    { flex: true, key: "rowId", value: undefined, level: "row", attType: "eleId" },
    { flex: true, key: "selectorId", value: undefined, level: "row", attType: "selector_Id" },
    { flex: false, key: "elementId", value: undefined, level: "element", attType: "eleId" },
    { flex: true, key: "elementId", value: undefined, level: "element", attType: "eleId" },
    { flex: true, key: "colEleId", value: undefined, level: "element", attType: "colEleId" },

];
export const allAttributes: standardAttType[] = [
    { eleProperty: "generic", loc: "htmlElement", cat: "normal", action: "insert", type: "generic", node: "img", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "htmlElement", cat: "custom", action: "insert", type: "upload", node: "img", class_: "showImage", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "htmlElement", cat: "normal", action: "insert", type: "generic", node: "p", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "type", loc: "htmlElement", cat: "shapeOutside", action: "upload", type: "shapeOutside", node: "p", class_: "showShape", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "htmlElement", cat: "shapeOutside", action: "upload", type: "shapeOutsidePolygon", node: "p", class_: "showShape", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "htmlElement", cat: "shapeOutside", action: "upload", type: "shapeOutsideCircle", node: "p", class_: "showShape", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "htmlElement", cat: "shapeOutside", action: "upload", type: "shapeOutsideSquare", node: "p", class_: "showShape", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "htmlElement", cat: "normal", action: "upload", type: "attr", node: "p", class_: undefined, level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "htmlElement", cat: "info", action: "upload", type: "attr", node: "p", class_: undefined, level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "htmlElement", cat: "headers", action: "insert", type: "generic", node: "h1", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "htmlElement", cat: "headers", action: "insert", type: "generic", node: "h2", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "htmlElement", cat: "headers", action: "insert", type: "generic", node: "h3", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "htmlElement", cat: "headers", action: "insert", type: "generic", node: "h4", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "htmlElement", cat: "headers", action: "insert", type: "generic", node: "h5", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "htmlElement", cat: "headers", action: "insert", type: "generic", node: "h6", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "htmlElement", cat: "normal", action: "insert", type: "generic", node: "ul", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "htmlElement", cat: "normal", action: "insert", type: "generic", node: "li", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "htmlElement", cat: "normal", action: "insert", type: "generic", node: "blockquote", class_: undefined, level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "htmlElement", cat: "normal", action: "insert", type: "generic", node: "div", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "htmlElement", cat: "normal", action: "insert", type: "generic", node: "a", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "htmlElement", cat: "normal", action: "upload", type: "links", node: "a", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "htmlElement", cat: "links", action: "hover", type: "links", node: "a", class_: "showLink", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "htmlElement", cat: "links", action: "hover", type: "links", node: "a", class_: "showEmail", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "htmlElement", cat: "links", action: "hover", type: "links", node: "a", class_: "showTel", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "htmlElement", cat: "info", action: "insert", type: "generic", node: "time", class_: " showTime", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "htmlElement", cat: "info", action: "insert", type: "upload", node: "time", class_: " showTime", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "htmlElement", cat: "info", action: "hover", type: "info", node: "time", class_: "showTime", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "htmlElement", cat: "normal", action: "insert", type: "generic", node: "pre", class_: undefined, level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "imgKey", loc: "flexbox", cat: "normal", action: "insert", type: "generic", node: "img", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "imgKey", loc: "htmlElement", cat: "custom", action: "insert", type: "upload", node: "img", class_: "showImage", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "htmlElement", cat: "custom", action: "insert", type: "upload", node: "img", class_: "showImage", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "normal", action: "insert", type: "generic", node: "p", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "type", loc: "flexbox", cat: "shapeOutside", action: "upload", type: "shapeOutside", node: "p", class_: "showShape", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "shapeOutside", action: "upload", type: "shapeOutsidePolygon", node: "p", class_: "showShape", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "shapeOutside", action: "upload", type: "shapeOutsideCircle", node: "p", class_: "showShape", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "shapeOutside", action: "upload", type: "shapeOutsideSquare", node: "p", class_: "showShape", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "normal", action: "upload", type: "attr", node: "p", class_: undefined, level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "info", action: "upload", type: "attr", node: "p", class_: undefined, level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "headers", action: "insert", type: "generic", node: "h1", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "headers", action: "insert", type: "generic", node: "h2", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "headers", action: "insert", type: "generic", node: "h3", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "headers", action: "insert", type: "generic", node: "h4", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "headers", action: "insert", type: "generic", node: "h5", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "headers", action: "insert", type: "generic", node: "h6", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "normal", action: "insert", type: "generic", node: "ul", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "normal", action: "insert", type: "generic", node: "li", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "normal", action: "insert", type: "generic", node: "blockquote", class_: undefined, level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "normal", action: "insert", type: "generic", node: "div", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "normal", action: "insert", type: "generic", node: "a", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "normal", action: "upload", type: "links", node: "a", class_: "showName", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "links", action: "hover", type: "links", node: "a", class_: "showLink", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "links", action: "hover", type: "links", node: "a", class_: "showEmail", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "links", action: "hover", type: "links", node: "a", class_: "showTel", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "info", action: "insert", type: "generic", node: "time", class_: "showTime", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "info", action: "insert", type: "upload", node: "time", class_: "showTime", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "info", action: "hover", type: "info", node: "time", class_: "showTime", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "normal", action: "insert", type: "generic", node: "pre", class_: undefined, level: "element", keyvalues: IDKeyValuepairs },

    { eleProperty: "generic", loc: "flexbox", cat: "normal", action: "insert", type: "generic", node: "section", class_: undefined, level: "selector", keyvalues: IDKeyValuepairs },
    { eleProperty: "type", loc: "htmlElement", cat: "headerflag", action: "insert", type: "headerflag", node: "div", class_: undefined, level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "normal", action: "insert", type: "generic", node: "div", class_: undefined, level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "normal", action: "insert", type: "generic", node: "div", class_: "coliSActive", level: "col", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "normal", action: "insert", type: "generic", node: "div", class_: undefined, level: "row", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "normal", action: "insert", type: "generic", node: "div", class_: undefined, level: "selector", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "upload", action: "insert", type: "upload", node: "div", class_: undefined, level: "col", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "upload", action: "insert", type: "upload", node: "div", class_: undefined, level: "row", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "custom", action: "upload", type: "attr", node: "div", class_: undefined, level: "row", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "custom", action: "upload", type: "attr", node: "div", class_: undefined, level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "custom", action: "upload", type: "attr", node: "div", class_: undefined, level: "col", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "custom", action: "upload", type: "attr", node: "div", class_: undefined, level: "row", keyvalues: IDKeyValuepairs },
    { eleProperty: "type", loc: "flexbox", cat: "custom", action: "label_type", type: "headerflag", node: "div", class_: "headerflag", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "custom", action: "label_attr", type: "design", node: "div", class_: "circle", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "custom", action: "label_attr", type: "design", node: "div", class_: "code", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "custom", action: "label_attr", type: "design", node: "div", class_: "arrow", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "custom", action: "label_attr", type: "design", node: "div", class_: "ven", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "custom", action: "label_attr", type: "design", node: "div", class_: "wave", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "custom", action: "label_attr", type: "design", node: "div", class_: "arch", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "custom", action: "hover", type: "info", node: "button", class_: "btnToolbar", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "custom", action: "hover", type: "info", node: "div", class_: "delete", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "custom", action: "hover", type: "info", node: "button", class_: "btnMessageHover", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "custom", action: "hover", type: "info", node: "div", class_: "viewCard", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "custom", action: "hover", type: "info", node: "div", class_: "viewCardNew", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "custom", action: "hover", type: "info", node: "button", class_: "btnHover", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "custom", action: "hover", type: "info", node: "div", class_: "addFill", level: "element", keyvalues: IDKeyValuepairs },
    { eleProperty: "generic", loc: "flexbox", cat: "custom", action: "hover", type: "info", node: "div", class_: "showGraph", level: "element", keyvalues: IDKeyValuepairs },

]

export const allFlexAttributes: standardAttType[] = [
    { eleProperty: "attr", loc: "flexbox", cat: "normal", action: "insert", type: "links", class_: undefined, level: "element", node: "div", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "normal", action: "insert", type: "links", class_: undefined, level: "element", node: "a", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "normal", action: "insert", type: "links", class_: undefined, level: "element", node: "a", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "normal", action: "insert", type: "links", class_: undefined, level: "element", node: "a", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "normal", action: "insert", type: "links", class_: undefined, level: "element", node: "time", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "normal", action: "insert", type: "links", class_: undefined, level: "element", node: undefined, keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "normal", action: "insert", type: "upload", class_: undefined, level: "element", node: "img", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "normal", action: "upload", type: "upload", class_: undefined, level: "col", node: "div", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "normal", action: "upload", type: "upload", class_: undefined, level: "row", node: "div", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "normal", action: "upload", type: "upload", class_: undefined, level: "col", node: "div", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "normal", action: "upload", type: "upload", class_: undefined, level: "row", node: "div", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "normal", action: "label_attr", type: "info", class_: undefined, level: "element", node: undefined, keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "normal", action: "label_attr", type: "upload", class_: undefined, level: "col", node: "div", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "normal", action: "label_attr", type: "upload", class_: undefined, level: "row", node: "div", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "normal", action: "label_attr", type: "upload", class_: undefined, level: "element", node: "div", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "normal", action: "label_attr", type: "upload", class_: undefined, level: "col", node: "div", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "normal", action: "label_attr", type: "upload", class_: undefined, level: "row", node: "div", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "shapeOutside", action: "label_attr", type: "shapeOutside", class_: undefined, level: "element", node: "p", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "shapeOutside", action: "label_attr", type: "shapeOutside", class_: undefined, level: "element", node: "p", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "shapeOutside", action: "label_attr", type: "shapeOutside", class_: undefined, level: "element", node: "p", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "shapeOutside", action: "label_attr", type: "shapeOutside", class_: undefined, level: "element", node: "p", keyvalues: IDKeyValuepairs },
    { eleProperty: "attr", loc: "flexbox", cat: "shapeOutside", action: "label_attr", type: "shapeOutside", class_: undefined, level: "element", node: undefined, keyvalues: IDKeyValuepairs },
]